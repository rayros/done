"use strict";!function(){window.todoDatabase={version:3,name:"todo",polyfill:function(e,t){function n(){var e=navigator.userAgent.toLowerCase();return/(iphone|ipod|ipad).* os 8_/.test(e)}return this.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB||window.shimIndexedDB,this.IDBKeyRange=window.IDBKeyRange||window.webkitIDBKeyRange||window.msIDBKeyRange||window.shimIndexedDB.modules.IDBKeyRange,n()&&(this.indexedDB=window.shimIndexedDB,this.IDBKeyRange=window.shimIndexedDB.modules.IDBKeyRange),this.indexedDB?e.call(this):t.call(this)},init:function(e){this.polyfill(function(){this.open(e)},function(){console.log("DB: Your browser doesn't support a stable version of IndexedDB.\n Such and such feature will not be available.")})},open:function(e){var t=this,n=t.indexedDB.open(this.name,this.version);n.onsuccess=function(t){return e&&e(t),t.target.result.close(),!1},n.onupgradeneeded=function(e){function n(e){return{check:function(t){return e.oldVersion<t&&e.newVersion>=t?!0:!1}}}var o,r=e.target.result,a=e.target.transaction,s=n(e);s.check(2)&&(o=r.createObjectStore("tasks",{keyPath:"id",autoIncrement:!0}),o.createIndex("category, checked",["category","checked"],{unique:!1}),r.createObjectStore("categories",{keyPath:"id",autoIncrement:!0}),r.createObjectStore("current",{keyPath:"key"}),t.addCategory("events"),t.setCurrent("category",{id:1,name:"events"})),s.check(3)&&(o=a.objectStore("tasks"),o.createIndex("category",["category"],{unique:!1}))},n.onerror=function(e){console.log("DB: error - "+e.target.error.message)}},transaction:function(e,t){this.open(function(n){var o=n.target.result,r=o.transaction(e,"readwrite");r.onerror=function(e){console.log("DB: Transaction not opened due to error."),console.log(e.target.error.message)},t(r)})},setCurrent:function(e,t,n){this.transaction("current",function(o){var r=o.objectStore("current"),a={key:e,value:t},s=r.put(a);s.onsuccess=function(){var o=new CustomEvent("current."+e,{detail:t});window.dispatchEvent(o),n&&n()}})},current:function(e,t){var n=this;n.transaction("current",function(n){var o=n.objectStore("current").get(e);o.onsuccess=function(e){return t(e.target.result.value),!1}})},addTask:function(e,t){var n=this;n.transaction("tasks",function(o){var r=o.objectStore("tasks"),a={name:e,category:t.id,checked:0},s=r.add(a);s.onsuccess=function(e){var t=new CustomEvent("new-task."+a.category,{detail:n.merge(a,{id:e.target.result})});window.dispatchEvent(t)}})},updateTask:function(e,t){var n=this;this.transaction("tasks",function(o){var r=o.objectStore("tasks"),a=r.get(e);a.onsuccess=function(e){var o=n.merge(e.target.result,t);r.put(o);var a=new CustomEvent("update-task."+o.category,{detail:o});window.dispatchEvent(a)}})},getTask:function(e,t){var n=this;n.transaction("tasks",function(n){var o=n.objectStore("tasks").get(e);o.onsuccess=function(e){t(e.target.result)}})},deleteTask:function(e,t){var n=this;n.getTask(e,function(o){n.transaction(["tasks"],function(n){var r=n.objectStore("tasks"),a=r.delete(e);a.onsuccess=function(n){var r=new CustomEvent("delete-task."+o.category,{detail:e});window.dispatchEvent(r),t&&t(n)}})})},tasks:function(e,t,n){var o=this,r=[];o.transaction("tasks",function(a){var s=a.objectStore("tasks").index("category, checked"),i=s.openCursor(o.IDBKeyRange.only([e,t]),"prev");i.onsuccess=function(e){var t=e.target.result;return t?(r.push(t.value),t.continue(),void 0):n(r)}})},addCategory:function(e,t){var n=this;n.transaction("categories",function(o){var r=o.objectStore("categories"),a={name:e},s=r.add(a);s.onsuccess=function(o){var r=new CustomEvent("add-category",{detail:n.merge(a,{id:o.target.result})});window.dispatchEvent(r),t&&t({id:o.target.result,name:e})}})},updateCategory:function(e,t,n){var o=this;this.transaction("categories",function(r){var a=r.objectStore("categories"),s=a.get(e);s.onsuccess=function(e){var r=o.merge(e.target.result,t);a.put(r);var s=new CustomEvent("update-category",{detail:r});window.dispatchEvent(s),n&&n(r)}})},deleteCategory:function(e,t,n){return 1===e?(n&&n(),void 0):(this.transaction(["categories","tasks"],function(n){var o=n.objectStore("categories"),r=n.objectStore("tasks"),a=r.index("category"),s=a.openCursor(IDBKeyRange.only([e]));s.onsuccess=function(n){var a=n.target.result;if(a)r.delete(a.value.id),a.continue();else{var s=o.delete(e);s.onsuccess=function(){var o=new CustomEvent("delete-category",{detail:e});window.dispatchEvent(o),t&&t(n)}}}}),void 0)},categories:function(e){var t=this,n=[];t.transaction("categories",function(t){var o=t.objectStore("categories");o.openCursor().onsuccess=function(t){var o=t.target.result;return o?(n.push(o.value),o.continue(),void 0):e(n)}})},deleteDB:function(e){var t=this.indexedDB.deleteDatabase(this.name);t.onsuccess=function(){e&&e()},t.onerror=function(){console.log("Couldn't delete database")},t.onblocked=function(){console.log("Couldn't delete database due to the operation being blocked")}},merge:function(e,t){var n={};for(var o in e)n[o]=e[o];for(var r in t)n[r]=t[r];return n}}}(),function(){todoDatabase.init()}();